# Generated by Django 3.1 on 2020-09-19 15:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_sms_manager', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False, help_text='Do you think you can be a Superuser?', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type_of_company', models.CharField(blank=True, choices=[('1', 'Airport'), ('2', 'Aeroline'), ('3', 'ciac'), ('4', 'omac')], max_length=1)),
                ('phone', models.IntegerField(default=0)),
                ('company_logo', models.ImageField(default='companys/company_logos/default_company_logo.png', upload_to='companys/company_logos/')),
                ('rif', models.IntegerField(default=0)),
                ('company_mail', models.EmailField(default='mail@mail.com', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='RiskReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('place', models.CharField(max_length=100)),
                ('type_of_risk', models.CharField(blank=True, choices=[('1', 'Relacionado con vuelo'), ('2', 'E.P.P. (Equipos de protección personal)'), ('3', 'Procedimientos'), ('4', 'Mantenimiento Aeronáutico'), ('5', 'FOD (Objetos extraños)'), ('6', 'Orden y limpieza'), ('7', 'Acto inseguro'), ('8', 'Otros')], max_length=1)),
                ('photo1', models.ImageField(default='risk_reports/risk.png', upload_to='risk_reports/')),
                ('photo2', models.ImageField(default='risk_reports/risk.png', upload_to='risk_reports/')),
                ('photo3', models.ImageField(default='risk_reports/risk.png', upload_to='risk_reports/')),
                ('photo4', models.ImageField(default='risk_reports/risk.png', upload_to='risk_reports/')),
                ('photo5', models.ImageField(default='risk_reports/risk.png', upload_to='risk_reports/')),
                ('description', models.TextField(blank=True)),
                ('recmendations', models.TextField(blank=True, default='')),
                ('is_open', models.BooleanField(default=True)),
                ('level_of_risk', models.CharField(blank=True, choices=[('1', 'Aceptable'), ('2', 'Moderado'), ('3', 'Alto')], max_length=1)),
                ('of_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_of_company', to='users.company')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_of_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SmsManager',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.user')),
                ('name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('career', models.CharField(default='', max_length=50)),
                ('phone', models.IntegerField(default=0)),
                ('photo', models.ImageField(default='sms_managers/profile_pics/default_user_profile_pic.png', upload_to='sms_managers/profile_pics/')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskDescription', models.TextField()),
                ('completedTask', models.BooleanField(default=False)),
                ('reponsable', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='task_of_user', to=settings.AUTH_USER_MODEL)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='task_of_report', to='users.riskreport')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentAccident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('place', models.CharField(max_length=100)),
                ('photo1', models.ImageField(default='incidents_accidents/incident_accident.jpg', upload_to='incidents_accidents/')),
                ('photo2', models.ImageField(default='incidents_accidents/incident_accident.jpg', upload_to='incidents_accidents/')),
                ('photo3', models.ImageField(default='incidents_accidents/incident_accident.jpg', upload_to='incidents_accidents/')),
                ('photo4', models.ImageField(default='incidents_accidents/incident_accident.jpg', upload_to='incidents_accidents/')),
                ('photo5', models.ImageField(default='incidents_accidents/incident_accident.jpg', upload_to='incidents_accidents/')),
                ('description', models.TextField(blank=True)),
                ('of_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_accident_of_company', to='users.company')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_accident_of_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.user')),
                ('name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', models.IntegerField(default=0)),
                ('photo', models.ImageField(default='employees/profile_pics/default_user_profile_pic.png', upload_to='employees/profile_pics/')),
                ('company', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, related_name='employee_of_company', to='users.company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='company_sms_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_by', to='users.smsmanager'),
        ),
    ]
